version: '3.7'

networks:
    default:
        name: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-net-${COMPOSE_APP_VERSION}
        driver: bridge
        ipam:
            driver: default
services:
    nginx:
        image: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-nginx:${COMPOSE_APP_VERSION}
        container_name: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-nginx-${COMPOSE_APP_VERSION}
        build:
            context: ./
            dockerfile: docker/nginx.docker
        volumes:
            - ./project/:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ${TZ}:/etc/timezone:ro
            - ${LT}:/etc/localtime:ro
        ports:
            - ${NGINX_PORT_MAP}
        links:
            - php-fpm
        restart: always
        working_dir: /var/www
    php-fpm:
        image: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-php-fpm:${COMPOSE_APP_VERSION}
        container_name: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-php-fpm-${COMPOSE_APP_VERSION}
        build:
            context: ./
            dockerfile: docker/php-fpm.docker
        volumes:
            - ./project/:/var/www
            - ${TZ}:/etc/timezone:ro
            - ${LT}:/etc/localtime:ro
        links:
            - postgres
        working_dir: /var/www
    postgres:
        image: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-postgres:${COMPOSE_APP_VERSION}
        container_name: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-postgres-${COMPOSE_APP_VERSION}
        build:
            context: ./
            dockerfile: docker/postgres.docker
        volumes:
            - ./postgres:/var/lib/postgresql/data
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtiexitme:ro
        environment:
            - POSTGRES_DB=${POSTGRES_DBNAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - PGDATA=/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT_MAP}
        restart: always
    node:
        image: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-node:${COMPOSE_APP_VERSION}
        container_name: ${COMPOSE_APP_NAME}-${COMPOSE_BRANCH}-node-${COMPOSE_APP_VERSION}
        build:
            context: ./
            dockerfile: ./docker/node.docker
        volumes:
            - ./project/:/var/www
        tty: true
        ports:
            - ${NODE_PORT_MAP}

